version: "3"

services:
  elasticsearch:
    image: elasticsearch:7.4.2
    environment:
      - "discovery.type=single-node"
      #- ELASTIC_PASSWORD=changethisinproduction
      #- xpack.security.enabled=true
      - http.port=9200
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization,Access-Control-Allow-Headers,Accept
      - http.cors.allow-credentials=true
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
      - 'ES_JAVA_OPTS=-Xms2g -Xmx4g'
    networks:
      - elasticnet
    restart: on-failure
  postgres:
    build:
      context: ./postgres
      dockerfile: postgres.Dockerfile
    environment:
      - "POSTGRES_USER=search"
      - "POSTGRES_PASSWORD=admin"
      - "POSTGRES_DB=search"
    networks: 
      - elasticnet
    ports:
      - "5432:5432" # exposte to host
    restart: always
  logstash:
    build:
      context: ./logstash
      dockerfile: logstash_psql.Dockerfile
    environment: 
      - LS_JAVA_OPTS=-Xmx4g
    networks:
      - elasticnet
    depends_on:
      - elasticsearch
      - postgres
    restart: on-failure
  valuespaces:
    image: laocoon667/oer-flask-api:latest
    networks:
      - elasticnet
    ports:
      - "5000:5000" # exposte to host
    restart: on-failure
  splash:
    image: scrapinghub/splash
    networks:
      - elasticnet
    command: --maxrss 4000
    restart: always
    ports:
      - "8050:8050" # exposte to host
  frontend:
    image: open-edu-hub-frontend
    networks:
      - elasticnet
    ports:
      - "127.0.0.1:8080:80" # expose locally
    depends_on:
      - elasticsearch-relay
  elasticsearch-relay:
    image: elasticsearch-relay
    networks:
      - elasticnet
    environment:
      - "ELASTICSEARCH_URL=http://elasticsearch:9200"
    ports:
      - "127.0.0.1:3000:80" # expose locally
    depends_on:
      - elasticsearch

networks:
  elasticnet:
